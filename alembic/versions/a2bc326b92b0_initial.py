"""initial

Revision ID: a2bc326b92b0
Revises: c019f93894cf
Create Date: 2024-01-14 19:23:05.835642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a2bc326b92b0"
down_revision: Union[str, None] = "c019f93894cf"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "author",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("bio", sa.String(length=511), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_author_id"), "author", ["id"], unique=False)
    op.create_table(
        "book",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("summary", sa.String(length=511), nullable=False),
        sa.Column("publication_date", sa.Date(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.Column(
            "book_status",
            sa.Enum("AVAILABLE", "RESERVED", "LOANED", "LOST", name="bookstatus"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["author.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_book_id"), "book", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_book_id"), table_name="book")
    op.drop_table("book")
    op.drop_index(op.f("ix_author_id"), table_name="author")
    op.drop_table("author")
    # ### end Alembic commands ###
